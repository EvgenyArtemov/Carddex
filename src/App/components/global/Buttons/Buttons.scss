@import "../../../../assets/styles/utils/mixin";

.custome-button {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    border-radius: $border-rad_10;
    transition: all 0.25s cubic-bezier(0.02, 0.01, 0.47, 1);
    cursor: pointer;

    svg {
        width: calc(100% - 2px);
        height: calc(100% - 2px);
        position: relative;
        padding: $indent-sm;
        border-radius: $border-rad_10;
        transition: all 0.25s cubic-bezier(0.02, 0.01, 0.47, 1);
        @each $theme, $map in $themes {
            .#{$theme} & {
                fill: map-get($map, brandPantonBlue);
                background: map-get($map, white);
            }
        }
    }

    .prompt {
        min-width: 100%;
        max-width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        position: absolute;
        top: 0;
        right: 0;
        background: transparent;
        pointer-events: none;
        border-radius: $border-rad_10;
        transition: all 0.25s cubic-bezier(0.02, 0.01, 0.47, 1);

        &>* {
            padding: 0 $indent-sm;
            text-align-last: left;
            opacity: 0;
            overflow: hidden;
            transition: all 0.25s cubic-bezier(0.02, 0.01, 0.47, 1);
        }
    }

    /* SIZE */
    &--square-sm {
        width: 28px;
        height: 28px;
    }

    &--square-m {
        width: 36px;
        height: 36px;
    }

    &--square-lg {
        width: 48px;
        height: 48px;
    }
    
    /* HOVER */
    &:hover:not(&--disable):not(&--custome) {
        transform:scale(1.2);
        z-index: 1;

        svg {            
            @each $theme, $map in $themes {
                .#{$theme} & {
                    box-shadow: 0px 4px 4px map-get($map, brandBoxShadow);
                }
            }
        }

        .prompt {
            max-width: 200px;
            @each $theme, $map in $themes {
                .#{$theme} & {
                    background: map-get($map, white);
                    border: 1px solid map-get($map, brandPantonBlue);
                }
            }
            
            &>* {
                padding: 0 calc(36px + #{$indent-sm}) 0 $indent-sm;
                opacity: 1;
            }

            &>*:empty {
                padding: 0;
                display: none;
            }            
        }

        .prompt:empty {
            border-color: transparent;
        }
    }

    /* TYPICAL */
    &--typical {
        svg {
            @each $theme, $map in $themes {
                .#{$theme} & {
                  fill: map-get($map, brandPantonText);
                }
            }
        }
    }

    /* CUSTOME */
    &--custome {
        width: 100%;
        justify-content: flex-start;
        align-items: center;
        border: 1px solid transparent;

        & > *:first-child {
            margin: 0 $indent-sm;
        }

        & > *:only-child {
            flex: 1;
            text-align: center;
        }

        .prompt {
            display: none;
        }

        svg {
            min-width: 34px;
            max-width: 34px;
            height: 34px;
            background: transparent !important;
        }

        .buttons__label {
            flex: 1 100%;
            text-align: start;
            padding: 0 $indent-sm;
        }
    }

    
    /* ACTIVE */
    &--active {
        svg {
            @each $theme, $map in $themes {
                .#{$theme} & {
                  fill: $white;
                  background: map-get($map, brandPantonBlue);
                }
            }
        }

        .prompt {
            border: 1px solid transparent !important;
        }
        
        &:hover {
            svg {
                @each $theme, $map in $themes {
                    .#{$theme} & {
                        background: lighten(map-get($map, brandPantonBlue), 10%);
                    }
                }
            }
        }

        .buttons__label>* {
            @each $theme, $map in $themes {
                .#{$theme} & {
                  color: $white;
                }
            }
        }
    }

    &--active.custome-button--custome {            
        @each $theme, $map in $themes {
            .#{$theme} & {
                background: map-get($map, brandPantonBlue);
            }
        }

        &:hover {
            @each $theme, $map in $themes {
                .#{$theme} & {
                    background: lighten(map-get($map, brandPantonBlue), 10%);
                }
            }
        }
    }

    /* DANGER */
    &--danger {
        svg {
            @each $theme, $map in $themes {
                .#{$theme} & {
                    fill: map-get($map, white) !important;
                    background: map-get($map, brandPantonRed) !important;
                }
            }
        }

        .prompt {
            border: 1px solid transparent !important;
        }
        
        &:hover {
            transform:scale(1.2);
            
            svg {
                @each $theme, $map in $themes {
                    .#{$theme} & {
                        background: lighten(map-get($map, brandPantonRed), 10%);
                    }
                }
            }
        }

    }
    
    /* DISABLE */
    &--disable {
        opacity: 0.5;
        cursor: not-allowed;
        
        svg {
            @each $theme, $map in $themes {
                .#{$theme} & {
                    fill: map-get($map, brandPantonText);
                }
            }
        }
    }
    
    &--disable.custome-button--custome {
        @each $theme, $map in $themes {
            .#{$theme} & {
                background: darken(map-get($map, brandPantonBlue), 10%);
            }
        }
        
        svg {
            @each $theme, $map in $themes {
                .#{$theme} & {
                    fill: $white;
                }
            }
        }

        .buttons__label>* {
            @each $theme, $map in $themes {
                .#{$theme} & {
                    color: $white;
                }
            }
        }
    }

    /* FOCUS */
    &.focus-visible {
        @each $theme, $map in $themes {
            .#{$theme} & {
                box-shadow: 0 0 0 0.2rem map-get($map, brandFocus);
            }
        }
    }
}